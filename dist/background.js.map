{"version":3,"sources":["utils/live-reload.js","background.js"],"names":["flatten","arr","reduce","acc","e","concat","Array","isArray","sum","xs","x","filesInDirectory","dir","Promise","resolve","createReader","readEntries","entries","files","all","filter","name","startsWith","map","isDirectory","file","modifiedTimeForFilesInDirectory","f","lastModified","reload","chrome","tabs","query","active","currentWindow","activeTab","id","runtime","watchForChanges","lastModifiedTime","modifiedTime","hasChanged","setTimeout","watch","management","getSelf","self","installType","getPackageDirectoryEntry","LiveReload"],"mappings":";;ACAA;;;;AAEAiD,oBAAWN,KAAX;ADFA,MAAM3C,OAAO,GAAIC,GAAD,IACdA,GAAG,CAACC,MAAJ,CAAW,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,CAACE,MAAJ,CAAWC,KAAK,CAACC,OAAN,CAAcH,CAAd,IAAmBJ,OAAO,CAACI,CAAD,CAA1B,GAAgCA,CAA3C,CAAvB,EAAsE,EAAtE,CADF;;AAGA,MAAMI,GAAG,GAAIC,EAAD,IAAQA,EAAE,CAACP,MAAH,CAAU,CAACC,GAAD,EAAMO,CAAN,KAAYP,GAAG,GAAGO,CAA5B,EAA+B,CAA/B,CAApB;;AAEA,MAAMC,gBAAgB,GAAIC,GAAD,IACvB,IAAIC,OAAJ,CAAaC,OAAD,IACVF,GAAG,CAACG,YAAJ,GAAmBC,WAAnB,CAA+B,MAAOC,OAAP,IAAmB;AAChD,QAAMC,KAAK,GAAG,MAAML,OAAO,CAACM,GAAR,CAClBF,OAAO,CACJG,MADH,CACWhB,CAAD,IAAO,CAACA,CAAC,CAACiB,IAAF,CAAOC,UAAP,CAAkB,GAAlB,CADlB,EAEGC,GAFH,CAEQnB,CAAD,IACHA,CAAC,CAACoB,WAAF,GACIb,gBAAgB,CAACP,CAAD,CADpB,GAEI,IAAIS,OAAJ,CAAaC,OAAD,IAAaV,CAAC,CAACqB,IAAF,CAAOX,OAAP,CAAzB,CALR,CADkB,CAApB;AASA,SAAOA,OAAO,CAACd,OAAO,CAACkB,KAAD,CAAR,CAAd;AACD,CAXD,CADF,CADF;;AAgBA,MAAMQ,+BAA+B,GAAG,MAAOd,GAAP,IAAe;AACrD,QAAMM,KAAK,GAAG,MAAMP,gBAAgB,CAACC,GAAD,CAApC;AACA,SAAOJ,GAAG,CAACU,KAAK,CAACK,GAAN,CAAWI,CAAD,IAAOA,CAAC,CAACC,YAAnB,CAAD,CAAV;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAM;AACnBC,EAAAA,MAAM,CAACC,IAAP,CAAYC,KAAZ,CAAkB;AAAEC,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,aAAa,EAAE;AAA/B,GAAlB,EAAyD,CAAC,CAACC,SAAD,CAAD,KAAiB;AACxE,QAAIA,SAAJ,EAAe;AACbL,MAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAmBM,SAAS,CAACC,EAA7B;AACD;;AAEDN,IAAAA,MAAM,CAACO,OAAP,CAAeR,MAAf;AACD,GAND;AAOD,CARD;;AAUA,MAAMS,eAAe,GAAG,OAAO1B,GAAP,EAAY2B,gBAAZ,KAAiC;AACvD,QAAMC,YAAY,GAAG,MAAMd,+BAA+B,CAACd,GAAD,CAA1D;AACA,QAAM6B,UAAU,GAAGF,gBAAgB,IAAIA,gBAAgB,KAAKC,YAA5D;;AACA,MAAIC,UAAJ,EAAgB;AACdZ,IAAAA,MAAM;AACP,GAFD,MAEO;AACLa,IAAAA,UAAU,CAAC,MAAMJ,eAAe,CAAC1B,GAAD,EAAM4B,YAAN,CAAtB,EAA2C,GAA3C,CAAV;AACD;AACF,CARD;;AAUA,MAAMG,KAAK,GAAG,MACZb,MAAM,CAACc,UAAP,CAAkBC,OAAlB,CAA2BC,IAAD,IAAU;AAClC,MAAIA,IAAI,CAACC,WAAL,KAAqB,aAAzB,EAAwC;AACtCjB,IAAAA,MAAM,CAACO,OAAP,CAAeW,wBAAf,CAAwCV,eAAxC;AACD;AACF,CAJD,CADF;;AAOA,MAAMW,UAAU,GAAG;AAAEN,EAAAA;AAAF,CAAnB;eAEeM","file":"background.js","sourceRoot":"../src","sourcesContent":["const flatten = (arr) =>\n  arr.reduce((acc, e) => acc.concat(Array.isArray(e) ? flatten(e) : e), []);\n\nconst sum = (xs) => xs.reduce((acc, x) => acc + x, 0);\n\nconst filesInDirectory = (dir) =>\n  new Promise((resolve) =>\n    dir.createReader().readEntries(async (entries) => {\n      const files = await Promise.all(\n        entries\n          .filter((e) => !e.name.startsWith(\".\"))\n          .map((e) =>\n            e.isDirectory\n              ? filesInDirectory(e)\n              : new Promise((resolve) => e.file(resolve))\n          )\n      );\n      return resolve(flatten(files));\n    })\n  );\n\nconst modifiedTimeForFilesInDirectory = async (dir) => {\n  const files = await filesInDirectory(dir);\n  return sum(files.map((f) => f.lastModified));\n};\n\nconst reload = () => {\n  chrome.tabs.query({ active: true, currentWindow: true }, ([activeTab]) => {\n    if (activeTab) {\n      chrome.tabs.reload(activeTab.id);\n    }\n\n    chrome.runtime.reload();\n  });\n};\n\nconst watchForChanges = async (dir, lastModifiedTime) => {\n  const modifiedTime = await modifiedTimeForFilesInDirectory(dir);\n  const hasChanged = lastModifiedTime && lastModifiedTime !== modifiedTime;\n  if (hasChanged) {\n    reload();\n  } else {\n    setTimeout(() => watchForChanges(dir, modifiedTime), 100);\n  }\n};\n\nconst watch = () =>\n  chrome.management.getSelf((self) => {\n    if (self.installType === \"development\") {\n      chrome.runtime.getPackageDirectoryEntry(watchForChanges);\n    }\n  });\n\nconst LiveReload = { watch };\n\nexport default LiveReload;\n","import LiveReload from \"./utils/live-reload\";\n\nLiveReload.watch();\n"]}